@{
    ViewData["Title"] = "Products";
    List<string> listNum = new List<string>();

    var data = ViewBag.Products;
    var sort = ViewBag.Sort;

    for(var i = 1; i <= data.PageCount; i++){
        listNum.Add(i.ToString());
    }
}

@using X.PagedList.Mvc.Core;
@using X.PagedList;

<style>
    .pagination{
        border: 1px solid;
        border-radius: 10px;
    }

    .pagination li {
        display: flex;
        padding: 8px 16px;
        list-style: none;
        border-right: 1px solid #0f0a0a;
        border-radius: 10px;
    }

    .pagination li.active {
        background-color: red;
        color: #000000;
    }

    .pagination li:hover:not(.active) {
        background-color: #ddd;
    }
</style>

<partial name="_PageHeader" />

<div class="container">
    <div class="my-3" style="min-height: 100vh">
        <h3 class="largeText fw-bold py-2">Products</h3>
        <div class="d-flex py-2">
            <label class="align-content-center">Sort By: </label>
            <div class="p-2">
                <select id="sortBy" class="form-select" onchange="sortChange()">
                    <option value="0">Newest</option>
                    <option value="1">Price Low to High</option>
                    <option value="2">Price High to Low</option>
                </select>
            </div>
        </div>
        <div class="row">
            @foreach (var product in ViewBag.Products)
            {
                <div class="col-sm-6 col-md-4 col-lg-3">
                    <div class="product-item shadow-sm">
                        <span class="badge bg-success position-absolute m-3">-@product.DiscountPercentage%</span>
                        <a class="btn-wishlist bi bi-heart" style="font-size: 24px"></a>
                        <img src="images/top-img1.jpg" class="product-image" />

                        <h6 class="fw-bold text-truncate mt-3">@product.ProductName</h6>
                        <div class="mt-2 d-flex gap-2">
                            <h6 class="text-black-50 text-decoration-line-through">R @product.OldPrice</h6>
                            <h6 class="text-black">R @product.Price</h6>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
    <div class="text-center">
        Page
        @Html.DropDownList("Page", new SelectList(listNum), htmlAttributes: new { @class = "p-1", id = "Page", onchange = "pageChange()" })
        of @ViewBag.Products.PageCount
        @*Html.PagedListPager((IPagedList)ViewBag.Products, page => Url.Action("", new { page, size = 1 }))*@
    </div>

</div>

@section Scripts{
    <script>
        window.onload = function(){
            $('#sortBy').val(@sort).attr("selected", "selected");
        }

        function pageChange(){
            var num = $('#Page').val();
            var sort = $('#sortBy').val();

            window.location.href = "/products?" + "page="+num + "&sort=" + sort;
        }

        function sortChange(){
            var sort = $('#sortBy').val();

            window.location.href = "/products?" + "&sort=" + sort;
        }
    </script>
}

@* <p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ProductName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ShortDescription)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LongDescription)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AdditionalDescription)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Size)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Colour)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CompanyName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Sold)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsCustomised)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsActive)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SubCategory)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ProductName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ShortDescription)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LongDescription)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AdditionalDescription)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Size)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Colour)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CompanyName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Sold)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsCustomised)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsActive)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SubCategory.SubCategoryId)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.ProductId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.ProductId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.ProductId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table> *@
